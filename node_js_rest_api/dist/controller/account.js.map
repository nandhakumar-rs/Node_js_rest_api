{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","post","req","res","acc","email","body","password","save","err","send","json","message","get","find","data","findOne","params","put","delete","remove","per","name","age","account","_id","persons","push","id"],"mappings":"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","file":"account.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport bodyParser from 'body-parser';\r\nimport account from '../model/account';\r\nimport person from '../model/person';\r\nimport { Router } from 'express';\r\n\r\n\r\n\r\nexport default ({ config, db }) => {\r\n\r\n    let api = Router();\r\n\r\n\r\n    api.post('/add', (req, res) => {\r\n        let acc = new account();\r\n        acc.email = req.body.email;\r\n        acc.password = req.body.password;\r\n        acc.save((err) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json({ message: \"stored\" });\r\n        });\r\n    });\r\n\r\n    api.get('/get', (req, res) => {\r\n        account.find({}, (err, data) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(data)\r\n        })\r\n\r\n\r\n    });\r\n\r\n    api.get('/get/:email', (req, res) => {\r\n        account.findOne({ email: req.params.email }, (err, data) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(data)\r\n        })\r\n\r\n\r\n    });\r\n\r\n    api.put('/update/:email', (req, res) => {\r\n        account.findOne({ email: req.params.email }, (err, data) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            data.email = req.body.email;\r\n            data.password = req.body.password\r\n            data.save(err => {\r\n                if (err) {\r\n                    res.send(err)\r\n                }\r\n                res.send('updated')\r\n            })\r\n\r\n        })\r\n\r\n\r\n    });\r\n\r\n    api.delete('/delete/:email', (req, res) => {\r\n        account.remove({ email: req.params.email }, (err) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.send(\"deleted\")\r\n        });\r\n    });\r\n\r\n    api.post('/addperson/:email', (req, res) => {\r\n        account.findOne({ email: req.params.email }, (err, data) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            let per = new person();\r\n            per.name = req.body.name;\r\n            per.age = req.body.age;\r\n            per.account = data._id;\r\n            per.save(err => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n\r\n            })\r\n            data.persons.push(per);\r\n            data.save(err => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                res.send('person added');\r\n            });\r\n\r\n        });\r\n    });\r\n\r\n    api.get('/getperson/:id',(req,res)=>{\r\n        person.find({account:req.params.id},(err,data)=>{\r\n            if(err){\r\n                res.send(err)\r\n            }\r\n            res.json(data)\r\n            \r\n        })\r\n    })\r\n   \r\napi.get('/getperson',(req,res)=>{\r\n    person.find({},(err,data)=>{\r\n        if(err){\r\n            res.send(err)\r\n        }\r\n        res.json(data)\r\n    })\r\n})\r\nreturn api;\r\n}\r\n\r\n"]}